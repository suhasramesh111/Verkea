using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class OutlineGameObject : MonoBehaviour
{
    private GameObject lastHoveredObject; // Last object hovered by the reticle
    private Vector3 originalScale; // Original scale of the object
    private Vector3 newSize; // Size of the object after scaling

    void Start()
    {
        // Store the original scale of the object
        originalScale = Vector3.one; // Assuming original scale is (1, 1, 1)
    }

    void Update()
    {
        // Cast a ray from the camera to the mouse position
        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
        RaycastHit hit;

        // Perform the raycast
        if (Physics.Raycast(ray, out hit))
        {
            // Get the object hit by the raycast
            GameObject hitObject = hit.collider.gameObject;

            // Check if the hit object is different from the last one hovered over
            if (hitObject != lastHoveredObject)
            {
                // Reset the scale of the last hovered object if it's not null
                if (lastHoveredObject != null)
                {
                    ResetSize(lastHoveredObject);
                }

                // Increase the size of the new hovered object
                newSize = hitObject.transform.localScale * 1.1f;
                SetSize(hitObject, newSize);
                lastHoveredObject = hitObject;
            }
        }
        else
        {
            // If no object is hit, reset the scale of the last hovered object if it's not null
            if (lastHoveredObject != null)
            {
                ResetSize(lastHoveredObject);
                lastHoveredObject = null;
            }
        }
    }

    void SetSize(GameObject obj, Vector3 size)
    {
        // Set the size of the object
        obj.transform.localScale = size;
    }

    void ResetSize(GameObject obj)
    {
        // Reset the size of the object to its original size
        obj.transform.localScale = originalScale;
    }
}
